-- ================================================================= --
-- NTBA FARM HUB - V21.2.5 (TÍCH HỢP AUTO HAKI ADAPTIVE/SPAM & AUTO Q)
-- CHÚ THÍCH CẬP NHẬT:
-- 1. Xóa Auto Haki (R) chu kỳ 7s/1s cũ.
-- 2. Tích hợp toàn bộ logic Auto Haki/Auto Q (Adaptive/Spam) của AutoHakiPermanent_v4.
-- 3. GUI của AutoHakiPermanent_v4 được nhúng vào Panel "AutoHaki" của Hub.
-- ================================================================= --

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer
local Character = player.Character or player.CharacterAdded:Wait()
local hrp = Character:WaitForChild("HumanoidRootPart")
local Backpack = player:WaitForChild("Backpack")
local CoreGui = game:GetService("CoreGui")

-- ================================================================= --
-- BIẾN HỆ THỐNG CHUNG (KHÔNG THAY ĐỔI)
-- ================================================================= --
local AutoFarmNPC = false
local FarmRadius = 150
local AutoSkillState={Z=false,X=false,C=false,V=false}
local AutoDropItem = false
local AutoDropItemPlus = false 
local Hotkey = Enum.KeyCode.RightControl
local HubVisible = true
local GodModeState = false

-- [[ THÔNG SỐ LOOT FRUIT MIX (CHEST) ]]
local AutoCollectChestState = false
local CollectChestRadius = 250
local CHEST_MODEL_NAME = "Crate" 
local CLICKABLE_PART_NAME = "Crate" 
-- ---------------------------------------------------

-- DANH SÁCH DROP CŨ VÀ MỚI (KHÔNG THAY ĐỔI)
local ITEM_DROP_LIST = {
    ["Apple"] = true, ["Cantaloup"] = true, ["Cantaloupe"] = true, ["Banana"] = true,
    ["Green Apple"] = true, ["Coconut"] = true, ["Pumpkin"] = true,
    ["Prickly Pear"] = true, ["Melon"] = true,
}
local ITEM_DROP_PLUS_LIST = {
    ["Cider+"] = true, ["Lemonade+"] = true, ["Juice+"] = true, ["Smoothie+"] = true,
}

local function findDroppableItemInList(dropList)
    for _, item in ipairs(Backpack:GetChildren()) do
        if (item:IsA("Tool") or item:IsA("HopperBin")) and dropList[item.Name] then
            return item
        end
    end
    return nil
end

player.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    hrp = Character:WaitForChild("HumanoidRootPart")
    if GodModeState then task.wait(0.2) end
end)

pcall(function()
    if player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("FruitHubUI") then
        player.PlayerGui.FruitHubUI:Destroy()
    end
end)

local PlayerGui = player:WaitForChild("PlayerGui", 5)
if not PlayerGui then return end

-- ================================================================= --
-- TÍCH HỢP CODE AUTO HAKI MỚI
-- ================================================================= --

-- BIẾN AUTO HAKI
local DEFAULT_KEY = "R"
local SECONDARY_KEY = "Q" 
local DEFAULT_INTERVAL = 0.15
local SAMPLE_WINDOW = 6
local MIN_INTERVAL = 0.02
local MAX_INTERVAL = 3

local isRunningR = false  -- Trạng thái chạy cho phím R (chức năng chính)
local isRunningQ = false  -- Trạng thái chạy cho phím Q
local currentMode = "Adaptive"

local CooldownData = {
    pressCount = 0,
    successCount = 0,
    lastSamples = {},
    lastPressTime = 0
}

-- HÀM CORE CHO AUTO HAKI
local function doKeyTap(keyName)
    pcall(function()
        VirtualInputManager:SendKeyEvent(true, keyName, false, game)
        task.wait(0.01)
        VirtualInputManager:SendKeyEvent(false, keyName, false, game)
    end)
    return true
end

local function simpleClamp(n, lo, hi)
    return math.max(lo, math.min(hi, n))
end

local function simpleInterval(txt)
    local n = tonumber(txt) or DEFAULT_INTERVAL
    return simpleClamp(n, MIN_INTERVAL, MAX_INTERVAL)
end

local function simpleReadGUI(obj)
    if not obj or not obj:IsA("GuiObject") then return nil end
    return obj.Size.X.Scale
end

local function simpleFindGUI()
    local pg = player and player:FindFirstChild("PlayerGui")
    if not pg then return nil end
    
    for _, obj in ipairs(pg:GetDescendants()) do
        if obj:IsA("GuiObject") and (obj.Name:lower():find("bar") or obj.Name:lower():find("cooldown")) then
            return obj
        end
    end
    return nil
end

local function checkCooldown(targetGUI)
    if not targetGUI or currentMode == "Spam" then return end
    local startVal = simpleReadGUI(targetGUI)
    if not startVal then return end
    local startTime = tick()
    local maxWait = 5
    while tick() - startTime < maxWait do
        local currentVal = simpleReadGUI(targetGUI)
        if currentVal and math.abs(currentVal - startVal) > 0.1 then
            local cooldownStart = tick()
            while tick() - cooldownStart < maxWait do
                local checkVal = simpleReadGUI(targetGUI)
                if checkVal and (checkVal <= 0.05 or checkVal >= 0.95) then
                    local duration = tick() - CooldownData.lastPressTime
                    if duration > 0.1 and duration < MAX_INTERVAL * 2 then
                        table.insert(CooldownData.lastSamples, duration)
                        if #CooldownData.lastSamples > SAMPLE_WINDOW then
                            table.remove(CooldownData.lastSamples, 1)
                        end
                        CooldownData.successCount = CooldownData.successCount + 1
                    end
                    return
                end
                task.wait(0.05)
            end
            break
        end
        task.wait(0.05)
    end
end

local function getSmartInterval()
    if #CooldownData.lastSamples == 0 then
        return simpleInterval(DEFAULT_INTERVAL) -- Dùng default vì ko có TextBox ở đây
    end
    local total = 0
    for _, sample in ipairs(CooldownData.lastSamples) do
        total = total + sample
    end
    local avg = total / #CooldownData.lastSamples
    return simpleClamp(avg - 0.05, MIN_INTERVAL, MAX_INTERVAL)
end


-- ================================================================= --
-- PHẦN UI CỦA HUB CHÍNH
-- ================================================================= --
local MAIN_W, MAIN_H = 600, 380
local Sidebar_W = 130
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FruitHubUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Size = UDim2.new(0, MAIN_W, 0, MAIN_H)
Main.Position = UDim2.new(0.5, -MAIN_W/2, 0.12, 0)
Main.BackgroundColor3 = Color3.fromRGB(24,24,28)
Main.BackgroundTransparency = 0.15
Main.BorderSizePixel = 0
Main.Parent = ScreenGui
Instance.new("UICorner", Main).CornerRadius = UDim.new(0,12)

-- ... (Tất cả phần UI/TitleBar/Sidebar/Tabs giữ nguyên) ...

local Sidebar = Instance.new("Frame")
Sidebar.Size = UDim2.new(0,Sidebar_W,1,-32)
Sidebar.Position = UDim2.new(0,0,0,32)
Sidebar.BackgroundColor3 = Color3.fromRGB(36,36,38)
Sidebar.BackgroundTransparency = 0.15
Sidebar.BorderSizePixel = 0
Sidebar.Parent = Main
Instance.new("UICorner", Sidebar).CornerRadius = UDim.new(0,10)

local tabs = {"AutoFarm","AutoNPC","AutoHaki","Fruit Mix","Utility","Settings"}
local tabButtons, panels = {}, {}

local SidebarLayout = Instance.new("UIListLayout", Sidebar)
SidebarLayout.Padding = UDim.new(0,6)
SidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
SidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
SidebarLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local Panel_X_Start = Sidebar_W + 10
local Panel_Y_Start = 32 + 10
local Panel_W = MAIN_W - Sidebar_W - 20
local Panel_H = MAIN_H - 32 - 20

for i,name in ipairs(tabs) do
    local btn = Instance.new("TextButton")
    -- ... (Tạo nút Tab) ...
    btn.Size = UDim2.new(1,-10,0,32)
    btn.BackgroundColor3 = Color3.fromRGB(44,44,46)
    btn.BackgroundTransparency = 0.2
    btn.BorderSizePixel = 0
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 13
    btn.TextColor3 = Color3.fromRGB(220,220,220)
    btn.Text = name
    btn.Parent = Sidebar
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    btn.LayoutOrder = i
    tabButtons[name] = btn

    local panel = Instance.new("Frame")
    panel.Name = name .. "Panel"
    panel.Size = UDim2.new(0, Panel_W, 0, Panel_H)
    panel.Position = UDim2.new(0, Panel_X_Start, 0, Panel_Y_Start)
    panel.BackgroundTransparency = 1
    panel.Visible = false
    panel.Parent = Main
    panels[name] = panel
end

panels["AutoFarm"].Visible = true
tabButtons["AutoFarm"].BackgroundColor3 = Color3.fromRGB(60,60,62)
tabButtons["AutoFarm"].BackgroundTransparency = 0.1

for name, btn in pairs(tabButtons) do
    btn.MouseButton1Click:Connect(function()
        for k,v in pairs(tabButtons) do v.BackgroundColor3 = Color3.fromRGB(44,44,46); v.BackgroundTransparency = 0.2 end
        for _,p in pairs(panels) do p.Visible = false end
        btn.BackgroundColor3 = Color3.fromRGB(60,60,62)
        btn.BackgroundTransparency = 0.1
        panels[name].Visible = true
    end)
end

-- ================================================================= --
-- PANEL AUTO HAKI (MỚI)
-- ================================================================= --

local AutoHakiPanel = panels["AutoHaki"]
local targetGUI = nil -- Biến lưu trữ GUI cooldown

do
    local p = AutoHakiPanel
    p.BackgroundTransparency = 0.95 -- Đặt lại để nó trong suốt hơn
    local y = 6

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 25)
    title.Position = UDim2.new(0, 0, 0, y)
    title.BackgroundTransparency = 1
    title.Text = "AutoHaki ADAPTIVE/SPAM (R & Q)"
    title.TextColor3 = Color3.fromRGB(0, 255, 0)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 16
    title.Parent = p
    y = y + 25

    local status = Instance.new("TextLabel")
    status.Name = "StatusLabel"
    status.Size = UDim2.new(1, -10, 0, 20)
    status.Position = UDim2.new(0, 5, 0, y)
    status.BackgroundTransparency = 1
    status.Text = "🔴 R OFF | 🔴 Q OFF | Mode: Adaptive"
    status.TextColor3 = Color3.fromRGB(200, 200, 200)
    status.TextXAlignment = Enum.TextXAlignment.Left
    status.Font = Enum.Font.SourceSans
    status.TextSize = 14
    status.Parent = p
    y = y + 25

    -- HÀM CẬP NHẬT UI
    local function updateUI()
        local successRate = CooldownData.pressCount > 0 and
            math.floor((CooldownData.successCount / CooldownData.pressCount) * 100) or 0
        
        status.Text = string.format("%s R | %s Q | %s | Success: %d%%",
            isRunningR and "🟢" or "🔴",
            isRunningQ and "🟢" or "🔴",
            currentMode,
            successRate
        )
    end

    local modeBtn = Instance.new("TextButton")
    modeBtn.Size = UDim2.new(0, 80, 0, 25)
    modeBtn.Position = UDim2.new(0, 5, 0, y)
    modeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 120)
    modeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    modeBtn.Text = "Adaptive"
    modeBtn.Font = Enum.Font.SourceSans
    modeBtn.TextSize = 14
    modeBtn.Parent = p

    local intBox = Instance.new("TextBox")
    intBox.Name = "IntervalBox"
    intBox.Size = UDim2.new(0, 60, 0, 25)
    intBox.Position = UDim2.new(0, 90, 0, y)
    intBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    intBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    intBox.Text = string.format("%.2f", DEFAULT_INTERVAL)
    intBox.ClearTextOnFocus = false
    intBox.Font = Enum.Font.SourceSans
    intBox.TextSize = 14
    intBox.Parent = p

    local rToggleBtn = Instance.new("TextButton")
    rToggleBtn.Size = UDim2.new(0, 100, 0, 25)
    rToggleBtn.Position = UDim2.new(1, -105, 0, y)
    rToggleBtn.AnchorPoint = Vector2.new(1, 0)
    rToggleBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    rToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    rToggleBtn.Text = "R START (F6)"
    rToggleBtn.Font = Enum.Font.SourceSansBold
    rToggleBtn.TextSize = 14
    rToggleBtn.Parent = p
    y = y + 30

    local pathBox = Instance.new("TextBox")
    pathBox.Name = "PathBox"
    pathBox.Size = UDim2.new(1, -10, 0, 20)
    pathBox.Position = UDim2.new(0, 5, 0, y)
    pathBox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    pathBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    pathBox.PlaceholderText = "Auto-detecting GUI..."
    pathBox.ClearTextOnFocus = false
    pathBox.Font = Enum.Font.SourceSans
    pathBox.TextSize = 12
    pathBox.Parent = p
    y = y + 25

    local qToggleBtn = Instance.new("TextButton")
    qToggleBtn.Name = "QToggleBtn"
    qToggleBtn.Size = UDim2.new(0, 120, 0, 25)
    qToggleBtn.Position = UDim2.new(0, 5, 0, y)
    qToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    qToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    qToggleBtn.Text = "🔘 Auto Q: OFF"
    qToggleBtn.Font = Enum.Font.SourceSansBold
    qToggleBtn.TextSize = 14
    qToggleBtn.Parent = p
    y = y + 30

    local infoLabel = Instance.new("TextLabel")
    infoLabel.Name = "InfoLabel"
    infoLabel.Size = UDim2.new(1, -10, 0, 40)
    infoLabel.Position = UDim2.new(0, 5, 0, y)
    infoLabel.BackgroundTransparency = 1
    infoLabel.Text = "Ready... Press R START/F6. Mode: Adaptive"
    infoLabel.TextColor3 = Color3.fromRGB(150, 150, 255)
    infoLabel.TextSize = 12
    infoLabel.TextXAlignment = Enum.TextXAlignment.Left
    infoLabel.TextYAlignment = Enum.TextYAlignment.Top
    infoLabel.Parent = p
    
    -- CONNECT ACTIONS
    
    -- Toggle R
    rToggleBtn.MouseButton1Click:Connect(function()
        isRunningR = not isRunningR
        rToggleBtn.Text = isRunningR and "R STOP (F6)" or "R START (F6)"
        rToggleBtn.BackgroundColor3 = isRunningR and Color3.fromRGB(0, 180, 0) or Color3.fromRGB(200, 0, 0)
        infoLabel.Text = isRunningR and "R Running. Monitoring cooldown patterns" or "R Stopped. Ready to continue."
        updateUI()
    end)

    -- Toggle Q
    qToggleBtn.MouseButton1Click:Connect(function()
        isRunningQ = not isRunningQ
        qToggleBtn.Text = isRunningQ and "🟢 Auto Q: ON" or "🔴 Auto Q: OFF"
        qToggleBtn.BackgroundColor3 = isRunningQ and Color3.fromRGB(0, 120, 0) or Color3.fromRGB(80, 80, 80)
        infoLabel.Text = isRunningQ and "Auto Q: ON. Pressing R & Q together." or "Auto Q: OFF. Only pressing R."
        updateUI()
    end)

    -- Toggle Mode
    modeBtn.MouseButton1Click:Connect(function()
        currentMode = (currentMode == "Adaptive") and "Spam" or "Adaptive"
        modeBtn.Text = currentMode
        modeBtn.BackgroundColor3 = currentMode == "Adaptive" and Color3.fromRGB(60, 60, 120) or Color3.fromRGB(120, 60, 60)
        updateUI()
    end)
    
    -- Auto-detect GUI khi panel hiện
    task.spawn(function()
        task.wait(3)
        local gui = simpleFindGUI()
        if gui then
            targetGUI = gui
            pathBox.Text = gui:GetFullName()
            infoLabel.Text = "Auto-detected: " .. gui.Name
        end
    end)
    
    -- CUNG CẤP HÀM UPDATE RA NGOÀI VÌ NÓ CẦN DÙNG TRONG VÒNG LẶP CHÍNH
    return rToggleBtn, intBox, pathBox, infoLabel, updateUI

end

-- ================================================================= --
-- VÒNG LẶP CHÍNH AUTO HAKI (ADAPTIVE/SPAM)
-- ================================================================= --

local mainLoopActive = true
local loopCount = 0

task.spawn(function()
    while mainLoopActive do
        if isRunningR then
            loopCount = loopCount + 1
            
            CooldownData.pressCount = CooldownData.pressCount + 1
            CooldownData.lastPressTime = tick()
            
            -- Nhấn phím R
            pcall(doKeyTap, DEFAULT_KEY)
            
            -- Nhấn phím Q nếu được bật riêng biệt
            if isRunningQ then
                pcall(doKeyTap, SECONDARY_KEY)
            end
            
            -- Tìm/Kiểm tra GUI (Đã được đơn giản hóa)
            if not targetGUI then
                targetGUI = simpleFindGUI()
            end

            if targetGUI then
                checkCooldown(targetGUI)
            end
            
            -- Cập nhật interval
            local waitTime = simpleInterval(DEFAULT_INTERVAL) -- Dùng default vì không có biến intBox ở đây
            if currentMode == "Adaptive" then
                waitTime = getSmartInterval()
            end
            
            task.wait(waitTime)
            
        else
            task.wait(0.5)
        end
    end
end)

-- (Giữ lại tất cả vòng lặp khác: AutoSkill, AutoFarmNPC, GodMode, DropItem, CollectChest)
-- ... (Các phần này giữ nguyên như script gốc) ...
-- ... (Logic AutoFarmPanel, AutoNPCPanel, FruitMixPanel, UtilityPanel, SettingsPanel giữ nguyên) ...

-- Cleanup khi player leave
if player then
    player.AncestryChanged:Connect(function()
        mainLoopActive = false
        pcall(function() ScreenGui:Destroy() end)
    end)
end

print("NTBA Farm Hub v21.2.5 - Auto Haki Adaptive/Spam & Auto Q đã được tích hợp!")
