-- AutoFruitGUI.lua

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer

-- ‚öôÔ∏è State Toggle
local settings = {
    autofruit = false,
    z = false,
    x = false,
    c = false,
    v = false,
    haki = false
}

-- üß± Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "AutoFruitControl"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")
gui.Enabled = false -- M·∫∑c ƒë·ªãnh ·∫©n

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 320)
frame.Position = UDim2.new(0, 20, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.AnchorPoint = Vector2.new(0, 0)

-- Title
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "Auto Fruit Control"
title.TextColor3 = Color3.fromRGB(170, 255, 170)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 22
title.TextStrokeTransparency = 0.8

-- Author label
local author = Instance.new("TextLabel", frame)
author.Size = UDim2.new(1, 0, 0, 20)
author.Position = UDim2.new(0, 0, 0, 300)
author.BackgroundTransparency = 1
author.Text = "T√°c gi·∫£: NTBA"
author.TextColor3 = Color3.fromRGB(100, 255, 100)
author.Font = Enum.Font.SourceSansItalic
author.TextSize = 16
author.TextStrokeTransparency = 0.9
author.TextXAlignment = Enum.TextXAlignment.Right

-- Layout for toggles
local uilist = Instance.new("UIListLayout", frame)
uilist.Padding = UDim.new(0, 8)
uilist.SortOrder = Enum.SortOrder.LayoutOrder
uilist.VerticalAlignment = Enum.VerticalAlignment.Top
uilist:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    frame.Size = UDim2.new(0, 220, 0, uilist.AbsoluteContentSize.Y + 40)
end)

-- üîò Toggle Button Creator
local function createToggle(name)
    local btn = Instance.new("TextButton", frame)
    btn.Size = UDim2.new(1, -20, 0, 40)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 18
    btn.Text = name .. ": OFF"
    btn.AutoButtonColor = true

    btn.MouseButton1Click:Connect(function()
        local key = name:lower()
        settings[key] = not settings[key]
        btn.Text = name .. ": " .. (settings[key] and "ON" or "OFF")
        btn.BackgroundColor3 = settings[key] and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(50, 50, 50)
    end)
end

-- üõ† Add Toggles
createToggle("AutoFruit")
createToggle("Z")
createToggle("X")
createToggle("C")
createToggle("V")
createToggle("Haki")

-- üö™ GUI toggle b·∫±ng ph√≠m Ctrl ph·∫£i (RightControl)
UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.RightControl then
        gui.Enabled = not gui.Enabled
    end
end)

-- üöÄ Auto nh·∫•n ph√≠m Z/X/C/V v√† Haki khi b·∫≠t AutoFruit
task.spawn(function()
    while true do
        task.wait(1)
        if settings.autofruit then
            if settings.z then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Z, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Z, false, game)
                print("Auto press Z")
            end
            if settings.x then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.X, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.X, false, game)
                print("Auto press X")
            end
            if settings.c then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.C, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.C, false, game)
                print("Auto press C")
            end
            if settings.v then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.V, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.V, false, game)
                print("Auto press V")
            end
            if settings.haki then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
                print("Auto press R (Haki)")
            end
        else
            task.wait(1) -- N·∫øu autofruit t·∫Øt th√¨ delay l√¢u h∆°n ƒë·ªÉ gi·∫£m t√†i nguy√™n
        end
    end
end)
