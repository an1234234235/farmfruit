local DEFAULT_KEY = "R"
local SECONDARY_KEY = "Q"  -- Th√™m ph√≠m Q
local HOLD_DURATION = 7    -- Gi·ªØ ph√≠m bao l√¢u (gi√¢y)
local HOTKEY_TOGGLE = Enum.KeyCode.F6
local GUI_NAME = "AutoHakiHoldKey_v1"
local MIN_INTERVAL = 0.02
local MAX_INTERVAL = 3

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Cleanup tri·ªát ƒë·ªÉ
pcall(function()
    if CoreGui:FindFirstChild(GUI_NAME) then CoreGui[GUI_NAME]:Destroy() end
    if LocalPlayer.PlayerGui:FindFirstChild(GUI_NAME) then LocalPlayer.PlayerGui[GUI_NAME]:Destroy() end
end)

-- H√†m gi·ªØ ph√≠m (hold)
local function holdKey(keyName, holdTime)
    local vim = game:GetService('VirtualInputManager')
    pcall(function()
        vim:SendKeyEvent(true, keyName, false, game)
    end)
    task.wait(holdTime)
    pcall(function()
        vim:SendKeyEvent(false, keyName, false, game)
    end)
end

-- GUI ƒë∆°n gi·∫£n
local screenGui = Instance.new("ScreenGui")
screenGui.Name = GUI_NAME
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 350, 0, 140)
frame.Position = UDim2.new(0.01, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 1
frame.BorderColor3 = Color3.fromRGB(60, 60, 60)
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
title.Text = "AutoHaki HOLD KEY v1.0"
title.TextColor3 = Color3.fromRGB(0, 255, 0)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16
title.Parent = frame

local status = Instance.new("TextLabel")
status.Size = UDim2.new(1, -10, 0, 20)
status.Position = UDim2.new(0, 5, 0, 30)
status.BackgroundTransparency = 1
status.Text = "üî¥ OFF | Hold: 7s | Presses: 0"
status.TextColor3 = Color3.fromRGB(200, 200, 200)
status.TextXAlignment = Enum.TextXAlignment.Left
status.Font = Enum.Font.SourceSans
status.TextSize = 14
status.Parent = frame

-- Th√™m toggle cho ph√≠m Q
local qToggleBtn = Instance.new("TextButton")
qToggleBtn.Size = UDim2.new(0, 120, 0, 20)
qToggleBtn.Position = UDim2.new(0, 5, 0, 55)
qToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
qToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
qToggleBtn.Text = "üîò Also Hold Q: OFF"
qToggleBtn.Font = Enum.Font.SourceSans
qToggleBtn.TextSize = 12
qToggleBtn.Parent = frame

local pathBox = Instance.new("TextBox")
pathBox.Size = UDim2.new(1, -10, 0, 20)
pathBox.Position = UDim2.new(0, 5, 0, 80)
pathBox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
pathBox.TextColor3 = Color3.fromRGB(255, 255, 255)
pathBox.PlaceholderText = "Auto-detecting GUI..."
pathBox.ClearTextOnFocus = false
pathBox.Font = Enum.Font.SourceSans
pathBox.TextSize = 12
pathBox.Parent = frame

local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(1, -10, 0, 30)
infoLabel.Position = UDim2.new(0, 5, 0, 105)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Ready... Press F6 ƒë·ªÉ b·∫Øt ƒë·∫ßu. S·∫Ω gi·ªØ ph√≠m 7s sau khi h·∫øt cooldown."
infoLabel.TextColor3 = Color3.fromRGB(150, 150, 255)
infoLabel.TextSize = 12
infoLabel.TextXAlignment = Enum.TextXAlignment.Left
infoLabel.TextYAlignment = Enum.TextYAlignment.Top
infoLabel.Parent = frame

screenGui.Parent = CoreGui

local isRunning = false
local useQKey = false
local pressCount = 0

-- ƒê·ªåC GUI VALUE ƒê∆†N GI·∫¢N
local function simpleReadGUI(obj)
    if not obj then return nil end
    local ok, val = pcall(function()
        if obj:IsA("GuiObject") then
            return obj.Size.X.Scale
        end
        return nil
    end)
    return ok and val or nil
end

-- T√åM GUI ƒê∆†N GI·∫¢N - TR√ÅNH MEMORY LEAK
local function simpleFindGUI()
    local pg = LocalPlayer:FindFirstChild("PlayerGui")
    if not pg then return nil end
    for _, obj in ipairs(pg:GetDescendants()) do
        if obj:IsA("GuiObject") and (obj.Name:lower():find("bar") or obj.Name:lower():find("cooldown")) then
            return obj
        end
    end
    return nil
end

local function updateUI()
    status.Text = string.format("%s | Hold: %ds | Presses: %d",
        isRunning and "üü¢ ON" or "üî¥ OFF",
        HOLD_DURATION,
        pressCount
    )
    -- C·∫≠p nh·∫≠t tr·∫°ng th√°i ph√≠m Q
    qToggleBtn.Text = string.format("üîò Also Hold Q: %s", useQKey and "ON" or "OFF")
    qToggleBtn.BackgroundColor3 = useQKey and Color3.fromRGB(0, 120, 0) or Color3.fromRGB(80, 80, 80)
end

-- V√íNG L·∫∂P CH√çNH
local mainLoopActive = true

task.spawn(function()
    while mainLoopActive do
        if isRunning then
            -- T√¨m GUI target (cooldown bar)
            local targetGUI = nil
            if pathBox.Text ~= "" and pathBox.Text ~= "Auto-detecting GUI..." then
                local parts = {}
                for part in pathBox.Text:gmatch("[^%.]+") do
                    table.insert(parts, part)
                end
                local current = game
                for _, part in ipairs(parts) do
                    current = current:FindFirstChild(part)
                    if not current then break end
                end
                targetGUI = current
            end
            if not targetGUI then
                targetGUI = simpleFindGUI()
                if targetGUI then
                    pathBox.Text = targetGUI:GetFullName()
                end
            end

            -- Ch·ªù cooldown k·∫øt th√∫c
            if targetGUI then
                infoLabel.Text = "ƒêang ch·ªù h·∫øt cooldown..."
                local maxWait = 10
                local startTime = tick()
                local inCooldown = false
                -- X√°c ƒë·ªãnh khi cooldown b·∫Øt ƒë·∫ßu (c√≥ thay ƒë·ªïi l·ªõn)
                local lastVal = simpleReadGUI(targetGUI)
                while tick() - startTime < maxWait do
                    local curVal = simpleReadGUI(targetGUI)
                    if curVal and lastVal and math.abs(curVal - lastVal) > 0.1 then
                        inCooldown = true
                        break
                    end
                    task.wait(0.05)
                end
                -- ƒê·ª£i cho t·ªõi khi cooldown k·∫øt th√∫c (bar ƒë·∫ßy ho·∫∑c h·∫øt)
                if inCooldown then
                    local cooldownStart = tick()
                    while tick() - cooldownStart < maxWait do
                        local checkVal = simpleReadGUI(targetGUI)
                        if checkVal and (checkVal <= 0.05 or checkVal >= 0.95) then
                            break -- cooldown xong
                        end
                        task.wait(0.05)
                    end
                end
            else
                infoLabel.Text = "Kh√¥ng t√¨m th·∫•y GUI cooldown, s·∫Ω gi·ªØ ph√≠m m·ªói 10s."
                task.wait(1)
            end

            -- Gi·ªØ ph√≠m
            infoLabel.Text = string.format("ƒêang gi·ªØ ph√≠m %s%s...", DEFAULT_KEY, useQKey and (" + " .. SECONDARY_KEY) or "")
            pressCount = pressCount + 1
            updateUI()

            -- Gi·ªØ ph√≠m R (v√† Q n·∫øu b·∫≠t) ƒë·ªìng th·ªùi
            local coList = {}
            table.insert(coList, coroutine.create(function() holdKey(DEFAULT_KEY, HOLD_DURATION) end))
            if useQKey then
                table.insert(coList, coroutine.create(function() holdKey(SECONDARY_KEY, HOLD_DURATION) end))
            end
            for _, co in ipairs(coList) do coroutine.resume(co) end
            task.wait(HOLD_DURATION + 0.2)
            infoLabel.Text = "ƒê√£ gi·ªØ ph√≠m xong, ch·ªù cooldown ti·∫øp theo..."
            updateUI()

        else
            task.wait(0.5)
        end
    end
end)

-- UI CONTROLS
local function toggleExecution()
    isRunning = not isRunning
    if isRunning then
        infoLabel.Text = "ƒêang ch·∫°y... S·∫Ω gi·ªØ ph√≠m 7s m·ªói l·∫ßn h·∫øt cooldown."
    else
        infoLabel.Text = "ƒê√£ d·ª´ng. S·∫µn s√†ng ch·∫°y l·∫°i."
    end
    updateUI()
end
qToggleBtn.MouseButton1Click:Connect(function()
    useQKey = not useQKey
    updateUI()
    infoLabel.Text = useQKey and "Gi·ªØ c·∫£ ph√≠m Q & R" or "Ch·ªâ gi·ªØ ph√≠m R"
end)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == HOTKEY_TOGGLE then
        toggleExecution()
    end
end)

-- Auto-detect GUI khi start
task.spawn(function()
    task.wait(2)
    local gui = simpleFindGUI()
    if gui then
        pathBox.Text = gui:GetFullName()
        infoLabel.Text = "Auto-detected: " .. gui.Name
    else
        infoLabel.Text = "Kh√¥ng t√¨m th·∫•y GUI cooldown t·ª± ƒë·ªông. H√£y nh·∫≠p th·ªß c√¥ng n·∫øu c·∫ßn."
    end
end)

-- Cleanup khi player leave
LocalPlayer.AncestryChanged:Connect(function()
    mainLoopActive = false
    pcall(function() screenGui:Destroy() end)
end)

print("AutoHaki HOLD KEY v1.0 loaded!")
print("Hold key sau cooldown: ƒê√É HO·∫†T ƒê·ªòNG")
